## higher cases than other country to show the countries with high cases.
## the dataset is arranged in descending order and the top 50 plotted.
topcases.america <- tbcases_america[with(tbcases_america,order(-tb_cases)),]
topcases.america
## the trend of total cases in Americas show that some countries had
## higher cases than other country to show the countries with high cases.
## the dataset is arranged in descending order and the top 50 plotted.
topcases.america <- tbcases_america[with(tbcases_america,order(-tb_cases)),]
topcases.america <- tbcases_america[1:50,]
topcases.america
tbcases_america
## the trend of total cases in Americas show that some countries had
## higher cases than other country to show the countries with high cases.
## the dataset is arranged in descending order and the top 50 plotted.
topcases.america <- tbcases_america[with(tbcases_america, order(-tb_cases)),]
## Task 3: look at trend in total cases in  America
by_country <- group_by(who_tbcase, country, sex, g_whoregion, iso3, year)
cases_bycountry <- summarize(by_country, tb_cases = sum(tb_cases))
tbcases_america <- subset(cases_bycountry, g_whoregion == "AMR")
tbcases_america
## the trend of total cases in Americas show that some countries had
## higher cases than other country to show the countries with high cases.
## the dataset is arranged in descending order and the top 50 plotted.
topcases.america <- tbcases_america[with(tbcases_america, order(-tb_cases)),]
topcases.america
ggplot(topcases.america, aes(country, tb_cases, group = country)) +
geom_boxplot(alpha = 1, aes(fill = country)) +
scale_y_continuous(labels = function(x) format(x, scientific = FALSE)) +
theme_bw() + labs(x = "Country", y = "Tuberculosis cases",
title = "WHO | Tuberculosis Cases (Americas Region)")
topcases.america <- tbcases_america[1:50,]
topcases.america
topcases.america <- tbcases_america[1:50 ,]
topcases.america
## the trend of total cases in Americas show that some countries had
## higher cases than other country to show the countries with high cases.
## the dataset is arranged in descending order and the top 50 plotted.
topcases.america <- tbcases_america[with(tbcases_america, order(-tb_cases)),]
topcases.america <- slice(1:50)
########################################
## Zinny Ezekannagha
## R as a Research Tool
## Homework 11
## Due 11/21/22
#######################################
## loading library
library(ggplot2)
library(dplyr)
library(stringr)
library(tidyr)
tb_full <- read.csv("https://extranet.who.int/tme/generateCSV.asp?ds=notifications",
stringsAsFactors=FALSE)
## We just want the "new and relapsed cases" data columns. See rows 385-421 in
## the data dictionary. I use all_of() to disambiguate that this character
## vector I give to the select() function is a vector of column names.
newrel_columns <- grep("newrel_([mf]|sex)", names(tb_full), value=TRUE)
tb_simple <- select(tb_full, country, iso3, g_whoregion, year,
all_of(newrel_columns))
## And these "newrel" data only exist for post 2012
tb_simple <- filter(tb_simple, year > 2012)
## reshaping the data
tb_clean <-  pivot_longer(tb_simple, cols = c(-country, -iso3, -g_whoregion,
-year), names_to = "class",
values_to = "tb_cases")
who_tbcase <- tb_clean %>% separate(class, into = c("sex", "age"), sep = "\\_")
## string matching for sex and age
who_tbcase$sex <-  str_match(who_tbcase$age, "m|f|sexunk")
who_tbcase$age <- str_match(who_tbcase$age, "[0-9]+|u|ageunk|15plus")
who_tbcase$year <- as.factor(who_tbcase$year) ## year to factor
## drop NAs
who_tbcase <- drop_na(who_tbcase)
head(who_tbcase)
## Task 2 : TB case by region since 2013
by_region <- group_by(who_tbcase, g_whoregion, year)
who_regions <- summarize(by_region, tb_cases = sum(tb_cases))
## plotting  tb cases by region
ggplot(who_regions, aes(year, tb_cases, group = g_whoregion, colour = g_whoregion)) +
geom_point(size = 2) +
scale_y_continuous(labels = function(x) format(x, scientific = FALSE)) +
scale_colour_discrete(labels = c("Africa", "Americas", "Eastern Mediterranean",
"Europe", "South East Asia", "Western Pacific")) +
geom_line() +
theme_classic() +
labs(x = "Tuberculosis cases", y = " Years",
title = "Change in tuberculosis cases by regions") +
guides(color = guide_legend(title = "Region"))
## Task 3: look at trend in total cases in  America
by_country <- group_by(who_tbcase, country, sex, g_whoregion, iso3, year)
cases_bycountry <- summarize(by_country, tb_cases = sum(tb_cases))
tbcases_america <- subset(cases_bycountry, g_whoregion == "AMR")
## the trend of total cases in Americas show that some countries had
## higher cases than other country to show the countries with high cases.
## the dataset is arranged in descending order and the top 50 plotted.
topcases.america <- tbcases_america[with(tbcases_america, order(-tb_cases)),]
topcases.america <- tbcases_america[1:50,]
topcases.america
topcases.america
## the trend of total cases in Americas show that some countries had
## higher cases than other country to show the countries with high cases.
## the dataset is arranged in descending order and the top 50 plotted.
topcases.america <- tbcases_america[with(tbcases_america, order(-tb_cases)),]
topcases.america
## the trend of total cases in Americas show that some countries had
## higher cases than other country to show the countries with high cases.
## the dataset is arranged in descending order and the top 50 plotted.
topcases.america <- tbcases_america[with(tbcases_america, order(-tb_cases)),]
topcases.america_ <- tbcases_america[1:50,]
topcases.america_
topcases.america <- tbcases_america[1:50]
topcases.america <- tbcases_america[1:50, ]
topcases.america
## the trend of total cases in Americas show that some countries had
## higher cases than other country to show the countries with high cases.
## the dataset is arranged in descending order and the top 50 plotted.
topcases.america <- tbcases_america[with(tbcases_america, order(-tb_cases)),]
topcases.america
topcases.america <- tbcases_america[1:20, ]
topcases.america
## the trend of total cases in Americas show that some countries had
## higher cases than other country to show the countries with high cases.
## the dataset is arranged in descending order and the top 50 plotted.
topcases.america <- tbcases_america[with(tbcases_america, order(-tb_cases)),]
topcases.america
topcases.america <- topcases.america[1:50,]
topcases.america
## the trend of total cases in Americas show that some countries had
## higher cases than other country to show the countries with high cases.
## the dataset is arranged in descending order and the top 50 plotted.
topcases.america <- tbcases_america[with(tbcases_america, order(-tb_cases)),]
topcases.america <- topcases.america[1:50,]
topcases.america
ggplot(topcases.america, aes(country, tb_cases, group = country)) +
geom_boxplot(alpha = 1, aes(fill = country)) +
scale_y_continuous(labels = function(x) format(x, scientific = FALSE)) +
theme_bw() + labs(x = "Country", y = "Tuberculosis cases",
title = "WHO | Tuberculosis Cases (Americas Region)")
## Task 4: About the data
## summarize by population
worldBank_pop <- world_bank_pop
head(worldBank_pop)
## reshape world population data to longer
wb.pop.tidier <- pivot_longer(worldBank_pop, cols=c(-country, -indicator),
names_to="year", values_to = "population",
values_drop_na = TRUE)
## filter by rows of total population
wb.pop.tidier <-wb.pop.tidier %>%
filter(indicator == "SP.POP.TOTL") %>%
rename("iso3" = "country") %>%
select(iso3, year, population)
## merging WHO tuberculosis and world bank population datasets. The world bank
## population data years is from 2000 - 2017, while the WHO data has 2013 - 2021
## to be able to compare the two datasets, i joined by the years the have in
## common which is 2013 - 2017.
wb_population <- left_join(cases_bycountry, wb.pop.tidier, by = c('iso3', 'year'))
wb_population <- drop_na(wb_population)
ggplot(wb_population, aes(tb_cases, population, group = g_whoregion, colour = g_whoregion)) +
scale_y_continuous(labels = function(x) format(x, scientific = FALSE)) +
geom_jitter() + theme_bw() + geom_smooth(method = "lm")
## cases per population
nyears <- length(unique(wb_population$year))
result <- wb_population  %>% group_by(country, year) %>%
summarize(population = sum(population)/nyears)
result[order(result$population, decreasing=TRUE),][1:20,]
result_ <- wb_population  %>% group_by(country, g_whoregion, year) %>%
summarize(tb_cases = sum(tb_cases)/nyears)
result_[order(result_$tb_cases, decreasing=TRUE),][1:20,]
who.pop.tbcases <- left_join(result_, result, by =  c('country', 'year')) %>%
mutate(cases_per_pop = (tb_cases/population) * 10000)
## plotting cases by population
ggplot(who.pop.tbcases, aes(year, cases_per_pop, group = g_whoregion,
fill = g_whoregion)) +
geom_boxplot() + labs(x = "year", y = "cases per population",
title = "WHO | Tuberculosis Cases per Population")
## cases by region
afr_ <- subset(who.pop.tbcases, g_whoregion == "AFR")
afr_top <- afr_[with(afr_, order(desc(cases_per_pop))),]
afr_top <- afr_top[1:50,]
ggplot(afr_top, aes(year, cases_per_pop, group = country, fill = country)) +
geom_boxplot()
########################################
## Zinny Ezekannagha
## R as a Research Tool
## Homework 11
## Due 11/21/22
#######################################
## loading library
library(ggplot2)
library(dplyr)
library(stringr)
library(tidyr)
tb_full <- read.csv("https://extranet.who.int/tme/generateCSV.asp?ds=notifications",
stringsAsFactors=FALSE)
## We just want the "new and relapsed cases" data columns. See rows 385-421 in
## the data dictionary. I use all_of() to disambiguate that this character
## vector I give to the select() function is a vector of column names.
newrel_columns <- grep("newrel_([mf]|sex)", names(tb_full), value=TRUE)
tb_simple <- select(tb_full, country, iso3, g_whoregion, year,
all_of(newrel_columns))
## And these "newrel" data only exist for post 2012
tb_simple <- filter(tb_simple, year > 2012)
## reshaping the data
tb_clean <-  pivot_longer(tb_simple, cols = c(-country, -iso3, -g_whoregion,
-year), names_to = "class",
values_to = "tb_cases")
who_tbcase <- tb_clean %>% separate(class, into = c("sex", "age"), sep = "\\_")
## string matching for sex and age
who_tbcase$sex <-  str_match(who_tbcase$age, "m|f|sexunk")
who_tbcase$age <- str_match(who_tbcase$age, "[0-9]+|u|ageunk|15plus")
who_tbcase$year <- as.factor(who_tbcase$year) ## year to factor
## drop NAs
who_tbcase <- drop_na(who_tbcase)
head(who_tbcase)
## Task 2 : TB case by region since 2013
by_region <- group_by(who_tbcase, g_whoregion, year)
who_regions <- summarize(by_region, tb_cases = sum(tb_cases))
## plotting  tb cases by region
ggplot(who_regions, aes(year, tb_cases, group = g_whoregion, colour = g_whoregion)) +
geom_point(size = 2) +
scale_y_continuous(labels = function(x) format(x, scientific = FALSE)) +
scale_colour_discrete(labels = c("Africa", "Americas", "Eastern Mediterranean",
"Europe", "South East Asia", "Western Pacific")) +
geom_line() +
theme_classic() +
labs(x = "Tuberculosis cases", y = " Years",
title = "Change in tuberculosis cases by regions") +
guides(color = guide_legend(title = "Region"))
## Task 3: look at trend in total cases in  America
by_country <- group_by(who_tbcase, country, sex, g_whoregion, iso3, year)
cases_bycountry <- summarize(by_country, tb_cases = sum(tb_cases))
tbcases_america <- subset(cases_bycountry, g_whoregion == "AMR")
## the trend of total cases in Americas show that some countries had
## higher cases than other country to show the countries with high cases.
## the dataset is arranged in descending order and the top 50 plotted.
topcases.america <- tbcases_america[with(tbcases_america, order(-tb_cases)),]
topcases.america <- topcases.america[1:50,]
ggplot(topcases.america, aes(country, tb_cases, group = country)) +
geom_boxplot(alpha = 1, aes(fill = country)) +
scale_y_continuous(labels = function(x) format(x, scientific = FALSE)) +
theme_bw() + labs(x = "Country", y = "Tuberculosis cases",
title = "WHO | Tuberculosis Cases (Americas Region)")
## Task 4: About the data
## summarize by population
worldBank_pop <- world_bank_pop
head(worldBank_pop)
## reshape world population data to longer
wb.pop.tidier <- pivot_longer(worldBank_pop, cols=c(-country, -indicator),
names_to="year", values_to = "population",
values_drop_na = TRUE)
## filter by rows of total population
wb.pop.tidier <-wb.pop.tidier %>%
filter(indicator == "SP.POP.TOTL") %>%
rename("iso3" = "country") %>%
select(iso3, year, population)
## merging WHO tuberculosis and world bank population datasets. The world bank
## population data years is from 2000 - 2017, while the WHO data has 2013 - 2021
## to be able to compare the two datasets, i joined by the years the have in
## common which is 2013 - 2017.
wb_population <- left_join(cases_bycountry, wb.pop.tidier, by = c('iso3', 'year'))
wb_population <- drop_na(wb_population)
ggplot(wb_population, aes(tb_cases, population, group = g_whoregion, colour = g_whoregion)) +
scale_y_continuous(labels = function(x) format(x, scientific = FALSE)) +
geom_jitter() + theme_bw() + geom_smooth(method = "lm")
## cases per population
nyears <- length(unique(wb_population$year))
result <- wb_population  %>% group_by(country, year) %>%
summarize(population = sum(population)/nyears)
result[order(result$population, decreasing=TRUE),][1:20,]
result_ <- wb_population  %>% group_by(country, g_whoregion, year) %>%
summarize(tb_cases = sum(tb_cases)/nyears)
result_[order(result_$tb_cases, decreasing=TRUE),][1:20,]
who.pop.tbcases <- left_join(result_, result, by =  c('country', 'year')) %>%
mutate(cases_per_pop = (tb_cases/population) * 10000)
## plotting cases by population
ggplot(who.pop.tbcases, aes(year, cases_per_pop, group = g_whoregion,
fill = g_whoregion)) +
geom_boxplot() + labs(x = "year", y = "cases per population",
title = "WHO | Tuberculosis Cases per Population")
## cases by region
afr_ <- subset(who.pop.tbcases, g_whoregion == "AFR")
afr_top <- afr_[with(afr_, order(desc(cases_per_pop))),]
afr_top <- afr_top[1:50,]
ggplot(afr_top, aes(year, cases_per_pop, group = country, fill = country)) +
geom_boxplot()
## from the world bank population data South east asia has the highest
## from the world bank population data South east asia has the highest
## popluation and highest cases as well. however in region like South Africa
## from the world bank population data South east asia has the highest
## popluation and highest cases as well. however in region like South Africa
## despite not having the higest population in the region has the highest cases
setwd("~/git/C3C4_GrowthChamber_Experiment/scripts")
# List files
file.list <- list.files("../licor_cleaned/chamber_2",
recursive = TRUE,
pattern = "\\.csv$",
full.names = TRUE)
file.list <- setNames(file.list, stringr::str_extract(basename(file.list),
'.*(?=\\.csv)'))
# Merge list of data frames, arrange by marchine, measurement type, id, and time elapsed
merged_curves <- lapply(file.list, read.csv) %>%
reshape::merge_all() %>%
arrange(machine, chamber, id, elapsed)
###############################################################################
## Load readLicorData package
###############################################################################
library(readLicorData)
library(dplyr)
# Merge list of data frames, arrange by marchine, measurement type, id, and time elapsed
merged_curves <- lapply(file.list, read.csv) %>%
reshape::merge_all() %>%
arrange(machine, chamber, id, elapsed)
co2_resp_chamber_2 <- merged_curves %>%
filter(chamber == 2)
write.csv(co2_resp_chamber_2, "../licor_cleaned/datasheets/TXCO2_co2_resp_chamber_2.csv", row.names = FALSE)
# List files
file.list <- list.files("../licor_cleaned/chamber_3",
recursive = TRUE,
pattern = "\\.csv$",
full.names = TRUE)
co2_resp_chamber_3 <- merged_curves %>%
filter(chamber == 3)
write.csv(co2_resp_chamber_3, "../licor_cleaned/datasheets/TXCO2_co2_resp_chamber_3.csv", row.names = FALSE)
# List files
file.list <- list.files("../licor_cleaned/chamber_3",
recursive = TRUE,
pattern = "\\.csv$",
full.names = TRUE)
file.list <- setNames(file.list, stringr::str_extract(basename(file.list),
'.*(?=\\.csv)'))
# Merge list of data frames, arrange by marchine, measurement type, id, and time elapsed
merged_curves <- lapply(file.list, read.csv) %>%
reshape::merge_all() %>%
arrange(machine, chamber, id, elapsed)
co2_resp_chamber_2 <- merged_curves %>%
filter(chamber == 2)
co2_resp_chamber_3 <- merged_curves %>%
filter(chamber == 3)
write.csv(co2_resp_chamber_3, "../licor_cleaned/datasheets/TXCO2_co2_resp_chamber_3.csv", row.names = FALSE)
# List files
file.list <- list.files("../licor_cleaned/",
recursive = TRUE,
pattern = "\\.csv$",
full.names = TRUE)
file.list <- setNames(file.list, stringr::str_extract(basename(file.list),
'.*(?=\\.csv)'))
# Merge list of data frames, arrange by marchine, measurement type, id, and time elapsed
merged_curves <- lapply(file.list, read.csv) %>%
reshape::merge_all() %>%
arrange(machine, chamber, id, elapsed)
q
# List files
file.list <- list.files("../licor_cleaned/chamber_5",
recursive = TRUE,
pattern = "\\.csv$",
full.names = TRUE)
file.list <- setNames(file.list, stringr::str_extract(basename(file.list),
'.*(?=\\.csv)'))
# Merge list of data frames, arrange by marchine, measurement type, id, and time elapsed
merged_curves <- lapply(file.list, read.csv) %>%
reshape::merge_all() %>%
arrange(machine, chamber, id, elapsed)
co2_resp_chamber_2 <- merged_curves %>%
filter(chamber == 2)
co2_resp_chamber_5 <- merged_curves %>%
filter(chamber == 5)
write.csv(co2_resp_chamber_5, "../licor_cleaned/datasheets/TXCO2_co2_resp_chamber_5.csv", row.names = FALSE)
# List files
file.list <- list.files("../licor_cleaned/chamber_2",
recursive = TRUE,
pattern = "\\.csv$",
full.names = TRUE)
file.list <- setNames(file.list, stringr::str_extract(basename(file.list),
'.*(?=\\.csv)'))
# Merge list of data frames, arrange by marchine, measurement type, id, and time elapsed
merged_curves <- lapply(file.list, read.csv) %>%
reshape::merge_all() %>%
arrange(machine, chamber, id, elapsed)
write.csv(co2_resp_chamber_2, "../licor_cleaned/datasheets/TXCO2_co2_resp_chamber_2.csv", row.names = FALSE)
write.csv(co2_resp_chamber_2, "../licor_cleaned/datasheets/TXCO2_co2_resp_chamber_2.csv", row.names = FALSE)
# List files
file.list <- list.files("../licor_cleaned/chamber_2",
recursive = TRUE,
pattern = "\\.csv$",
full.names = TRUE)
file.list <- setNames(file.list, stringr::str_extract(basename(file.list),
'.*(?=\\.csv)'))
# Merge list of data frames, arrange by marchine, measurement type, id, and time elapsed
merged_curves <- lapply(file.list, read.csv) %>%
reshape::merge_all() %>%
arrange(machine, chamber, id, elapsed)
co2_resp_chamber_2 <- merged_curves %>%
filter(chamber == 2)
write.csv(co2_resp_chamber_2, "../licor_cleaned/datasheets/TXCO2_co2_resp_chamber_2.csv", row.names = FALSE)
###############################################################################
## Load readLicorData package
###############################################################################
library(readLicorData)
library(dplyr)
# Albert
eco2_rd_ch4d1_alb <- licorData(location = "../licor_raw/Zinny_GC_Albert/2023-03-02-1453_chamber4_dr") %>%
mutate(chamber = 6)
write.csv(eco2_rd_ch4d1_alb, "../licor_cleaned/chamber_4/dark_rep/eco2_rd_ch4d1_alb.csv", row.names = FALSE)
write.csv(eco2_rd_ch4d1_alb, "../licor_cleaned/chamber_4/dark_resp/eco2_rd_ch4d1_alb.csv", row.names = FALSE)
# Albert
eco2_rd_ch4d1_alb <- licorData(location = "../licor_raw/Zinny_GC_Albert/2023-03-02-1453_chamber4_dr") %>%
mutate(chamber = 4)
write.csv(eco2_rd_ch4d1_alb, "../licor_cleaned/chamber_4/dark_resp/eco2_rd_ch4d1_alb.csv", row.names = FALSE)
eco2_rd_ch4d2_alb <- licorData(location = "../licor_raw/Zinny_GC_Albert/2023-03-03-1507_chamber4_dr_day2") %>%
mutate(chamber = 4)
write.csv(eco2_rd_ch4d2_alb, "../licor_cleaned/chamber_4/dark_resp/eco2_rd_ch4d2_alb.csv", row.names = FALSE)
eco2_rd_ch4d3_alb <- licorData(location = "../licor_raw/Zinny_GC_Albert/2023-03-06-1519_chamber4_dr_day3") %>%
mutate(chamber = 4)
write.csv(eco2_rd_ch4d3_alb, "../licor_cleaned/chamber_4/dark_resp/eco2_rd_ch4d3_alb.csv", row.names = FALSE)
aco2_rd_ch3d4_alb <- licorData(location = "../licor_raw/Zinny_GC_Albert/2023-03-08-1432_chamber3_dr_day4") %>%
mutate(chamber = 3)
write.csv(eco2_rd_ch3d4_alb, "../licor_cleaned/chamber_3/dark_resp/eco2_rd_ch3d4_alb.csv", row.names = FALSE)
write.csv(aco2_rd_ch3d4_alb, "../licor_cleaned/chamber_3/dark_resp/aco2_rd_ch3d4_alb.csv", row.names = FALSE)
aco2_rd_ch3d5_alb <- licorData(location = "../licor_raw/Zinny_GC_Albert/2023-03-10-1502_chamber3_dr_day5") %>%
mutate(chamber = 3)
# write.csv(aco2_rd_ch3d5_alb, "../licor_cleaned/chamber_3/dark_resp/aco2_rd_ch3d5_alb.csv", row.names = FALSE)
write.csv(aco2_rd_ch3d5_alb, "../licor_cleaned/chamber_3/dark_resp/aco2_rd_ch3d5_alb.csv", row.names = FALSE)
aco2_rd_ch3d5_2_alb <- licorData(location = "../licor_raw/Zinny_GC_Albert/2023-03-10-1529_chamber3_dr_day5_2") %>%
mutate(chamber = 3)
write.csv(aco2_rd_ch3d5_2_alb, "../licor_cleaned/chamber_3/dark_resp/aco2_rd_ch3d5_2_alb.csv", row.names = FALSE)
aco2_rd_ch3d6_alb <- licorData(location = "../licor_raw/Zinny_GC_Albert/2023-03-14-1521_chamber3_dr_day6") %>%
mutate(chamber = 3)
write.csv(aco2_rd_ch3d6_alb, "../licor_cleaned/chamber_3/dark_resp/aco2_rd_ch3d6_alb.csv", row.names = FALSE)
eco2_rd_ch5d1_alb <- licorData(location = "../licor_raw/Zinny_GC_Albert/2023-03-21-2038_chamber5_d1_dr") %>%
mutate(chamber = 5)
write.csv(eco2_rd_ch5d1_alb, "../licor_cleaned/chamber_5/dark_resp/eco2_rd_ch5d1_alb.csv", row.names = FALSE)
eco2_rd_ch5d2_alb <- licorData(location = "../licor_raw/Zinny_GC_Albert/2023-03-22-1928_chamber5_d2_dr") %>%
mutate(chamber = 5)
write.csv(eco2_rd_ch5d2_alb, "../licor_cleaned/chamber_5/dark_resp/eco2_rd_ch5d2_alb.csv", row.names = FALSE)
eco2_rd_ch5d3_alb <- licorData(location = "../licor_raw/Zinny_GC_Albert/2023-03-23-2000_chamber5_d3_dr") %>%
mutate(chamber = 5)
write.csv(eco2_rd_ch5d3_alb, "../licor_cleaned/chamber_5/dark_resp/eco2_rd_ch5d3_alb.csv", row.names = FALSE)
# Albert
aco2_rd_ch2d1_alb <- licorData(location = "../licor_raw/Zinny_GC_Albert/2023-03-24-1509_chamber2_d1_dr") %>%
mutate(chamber = 2)
write.csv(aco2_rd_ch2d1_alb, "../licor_cleaned/chamber_2/dark_resp/aco2_rd_ch2d1_alb.csv", row.names = FALSE)
aco2_rd_ch2d2_alb <- licorData(location = "../licor_raw/Zinny_GC_Albert/2023-03-28-1653_chamber2_d2_dr") %>%
mutate(chamber = 2)
write.csv(aco2_rd_ch2d2_alb, "../licor_cleaned/chamber_2/dark_resp/aco2_rd_ch2d2_alb.csv", row.names = FALSE)
aco2_rd_ch2d3_alb <- licorData(location = "../licor_raw/Zinny_GC_Albert/2023-03-29-1527_chamber2_d3_dr") %>%
mutate(chamber = 2)
write.csv(aco2_rd_ch2d3_alb, "../licor_cleaned/chamber_2/dark_resp/aco2_rd_ch2d3_alb.csv", row.names = FALSE)
aco2_rd_ch2d4_alb <- licorData(location = "../licor_raw/Zinny_GC_Albert/2023-03-30-1609_chamber2_d4_dr") %>%
mutate(chamber = 2)
write.csv(aco2_rd_ch2d4_alb, "../licor_cleaned/chamber_2/dark_resp/aco2_rd_ch2d4_alb.csv", row.names = FALSE)
aco2_rd_ch2d5_alb <- licorData(location = "../licor_raw/Zinny_GC_Albert/2023-03-31-1517_chamber2_d5_dr") %>%
mutate(chamber = 2)
write.csv(aco2_rd_ch2d5_alb, "../licor_cleaned/chamber_2/dark_resp/aco2_rd_ch2d5_alb.csv", row.names = FALSE)
aco2_rd_ch2d6_alb <- licorData(location = "../licor_raw/Zinny_GC_Albert/2023-04-03-1511_chamber2_d6_dr") %>%
mutate(chamber = 2)
write.csv(aco2_rd_ch2d6_alb, "../licor_cleaned/chamber_2/dark_resp/aco2_rd_ch2d6_alb.csv", row.names = FALSE)
aco2_rd_ch2d7_alb <- licorData(location = "../licor_raw/Zinny_GC_Albert/2023-04-04-1543_chamber2_d7_dr") %>%
mutate(chamber = 2)
write.csv(eco2_rd_ch4d1_alb, "../licor_cleaned/chamber_4/dark_resp/eco2_rd_ch4d1_alb.csv", row.names = FALSE)
write.csv(aco2_rd_ch2d7_alb, "../licor_cleaned/chamber_2/dark_resp/aco2_rd_ch2d7_alb.csv", row.names = FALSE)
aco2_rd_ch2d8_alb <- licorData(location = "../licor_raw/Zinny_GC_Albert/2023-04-05-1631_chamber2_d8_dr") %>%
mutate(chamber = 2)
write.csv(aco2_rd_ch2d8_alb, "../licor_cleaned/chamber_2/dark_resp/aco2_rd_ch2d8_alb.csv", row.names = FALSE)
#New
eco2_rd_ch4d1_alb <- licorData(location = "../licor_raw/Zinny_GC_New/2023-03-06-1523_chamber4_dr_day3") %>%
mutate(chamber = 4)
write.csv(eco2_rd_ch4d1_alb, "../licor_cleaned/chamber_4/dark_resp/eco2_rd_ch4d1_alb.csv", row.names = FALSE)
eco2_rd_ch4d1_alb <- licorData(location = "../licor_raw/Zinny_GC_Albert/2023-03-02-1453_chamber4_dr") %>%
mutate(chamber = 4)
write.csv(eco2_rd_ch4d1_alb, "../licor_cleaned/chamber_4/dark_resp/eco2_rd_ch4d1_alb.csv", row.names = FALSE)
#New
eco2_rd_ch4d1_new <- licorData(location = "../licor_raw/Zinny_GC_New/2023-03-06-1523_chamber4_dr_day3") %>%
mutate(chamber = 4)
write.csv(eco2_rd_ch4d1_new, "../licor_cleaned/chamber_4/dark_resp/eco2_rd_ch4d1_new.csv", row.names = FALSE)
View(eco2_rd_ch4d1_new)
#New
eco2_rd_ch4d1_new <- licorData(location = "../licor_raw/Zinny_GC_New/2023-03-06-1523_chamber4_dr_day3") %>%
mutate(chamber = 4)
write.csv(eco2_rd_ch4d1_new, "../licor_cleaned/chamber_4/dark_resp/eco2_rd_ch4d1_new.csv", row.names = FALSE)
write.csv(eco2_rd_ch3d4_new, "../licor_cleaned/chamber_3/dark_resp/eco2_rd_ch3d4_new.csv", row.names = FALSE)
write.csv(aco2_rd_ch3d4_new, "../licor_cleaned/chamber_3/dark_resp/aco2_rd_ch3d4_new.csv", row.names = FALSE)
aco2_rd_ch3d4_new <- licorData(location = "../licor_raw/Zinny_GC_New/2023-03-08-1436_chamber3_dr_day4") %>%
mutate(chamber = 3)
write.csv(aco2_rd_ch3d4_new, "../licor_cleaned/chamber_3/dark_resp/aco2_rd_ch3d4_new.csv", row.names = FALSE)
aco2_rd_ch3d4_alb <- licorData(location = "../licor_raw/Zinny_GC_Albert/2023-03-08-1432_chamber3_dr_day4") %>%
mutate(chamber = 3)
write.csv(aco2_rd_ch3d4_alb, "../licor_cleaned/chamber_3/dark_resp/aco2_rd_ch3d4_alb.csv", row.names = FALSE)
aco2_rd_ch3d4_new <- licorData(location = "../licor_raw/Zinny_GC_New/2023-03-08-1436_chamber3_dr_day4") %>%
mutate(chamber = 3)
write.csv(aco2_rd_ch3d4_new, "../licor_cleaned/chamber_3/dark_resp/aco2_rd_ch3d4_new.csv", row.names = FALSE)
aco2_rd_ch3d5_new <- licorData(location = "../licor_raw/Zinny_GC_New/2023-03-10-1509_chamber3_dr_day5") %>%
mutate(chamber = 3)
write.csv(aco2_rd_ch3d5_new, "../licor_cleaned/chamber_3/dark_resp/aco2_rd_ch3d5_new.csv", row.names = FALSE)
aco2_rd_ch3d6_new <- licorData(location = "../licor_raw/Zinny_GC_New/2023-03-14-1527_chamber3_dr_day6") %>%
mutate(chamber = 3)
write.csv(aco2_rd_ch3d6_new, "../licor_cleaned/chamber_3/dark_resp/aco2_rd_ch3d6_new.csv", row.names = FALSE)
eco2_rd_ch5d1_new <- licorData(location = "../licor_raw/Zinny_GC_New/2023-03-21-2042_chamber5_d1_dr") %>%
mutate(chamber = 5)
write.csv(eco2_rd_ch5d1_new, "../licor_cleaned/chamber_5/dark_resp/eco2_rd_ch5d1_new.csv", row.names = FALSE)
eco2_rd_ch5d2_new <- licorData(location = "../licor_raw/Zinny_GC_New/2023-03-22-1930_chamber5_d2_dr") %>%
mutate(chamber = 5)
write.csv(eco2_rd_ch5d2_new, "../licor_cleaned/chamber_5/dark_resp/eco2_rd_ch5d2_new.csv", row.names = FALSE)
eco2_rd_ch5d3_new <- licorData(location = "../licor_raw/Zinny_GC_Albert/2023-03-22-1928_chamber5_d2_dr") %>%
mutate(chamber = 5)
write.csv(eco2_rd_ch5d3_new, "../licor_cleaned/chamber_5/dark_resp/eco2_rd_ch5d3_new.csv", row.names = FALSE)
aco2_rd_ch2d1_new <- licorData(location = "../licor_raw/Zinny_GC_New/2023-03-24-1532_chamber2_d1_dr") %>%
mutate(chamber = 2)
write.csv(aco2_rd_ch2d1_new, "../licor_cleaned/chamber_2/dark_resp/aco2_rd_ch2d1_new.csv", row.names = FALSE)
# Ozzie
eco2_rd_ch4d1_ozz <- licorData(location = "../licor_raw/Zinny_GC_OzzieGibson/2023-03-01-1622_chamber4_dr") %>%
mutate(chamber = 4)
write.csv(eco2_rd_ch4d1_ozz, "../licor_cleaned/rd/eco2_rd_ch4d1_ozz.csv", row.names = FALSE)
write.csv(eco2_rd_ch4d1_ozz, "../licor_cleaned/chamber_4/dark_resp/eco2_rd_ch4d1_ozz.csv", row.names = FALSE)
write.csv(eco2_rd_ch4d1_ozz, "../licor_cleaned/chamber_4/eco2_rd_ch4d1_ozz.csv", row.names = FALSE)
